---
title: "Project2"
format: html
editor: visual
---

## Name: Xingwang Yu

## Project2 for ST558

## Build function to query API

I choose the **Api-Football**, which could access information about Football Leagues and cups.

First, I will write a function to query API:

```{r}
library(tidyverse)
library(httr)
library(jsonlite)
library(tibble)
library(dplyr)
library(ggplot2)
```


```{r}
get_football_data <- function(endpoint, api_key, params = list()) {
  url <- paste0("https://v3.football.api-sports.io/", endpoint)
  
  response <- GET(url, add_headers(`x-apisports-key` = api_key), query = params)
  
  if (http_status(response)$category != "Success") {
    stop(paste("Error:", http_status(response)$message, content(response, "text")))
  }
  
  data <- content(response, "parsed", simplifyVector = TRUE)
  
  return(data)
}
```

By querying API, I will get the top scorers data in English Premier League in 2022-2023 season:

```{r}
api_key <- '7bb4734f269c8a2fce113f507c69ed8e'
endpoint <- "players/topscorers"
params <- list(league = 39, season = 2022)

#get data list and convert to tibble
top_scorers_data <- get_football_data(endpoint, api_key, params)
top_scorers_list <- as_tibble(top_scorers_data$response$player)
top_scorers_stats <- bind_rows(lapply(top_scorers_data$response$statistics, as_tibble, .name_repair="unique"))

top_scorers_df <- bind_cols(top_scorers_list, top_scorers_stats)

```

Next, I will get the team data of Mancherster United in 2022-2023 season:
```{r}
api_key <- '7bb4734f269c8a2fce113f507c69ed8e'
endpoint <- "teams/statistics"
params <- list(league = 39, season = 2022, team = 33)

team_data <- get_football_data(endpoint, api_key, params)
team_list <- team_data$response$fixtures

# Convert the list to a tibble
team_df <- as_tibble(team_list)
```
