---
title: "Project2"
format: html
editor: visual
---

## Name: Xingwang Yu

## Project2 for ST558

## Build function to query API

I choose the **Api-Football**, which could access information about Football Leagues and cups.

First, I will write a function to query API:

```{r}
library(tidyverse)
library(httr)
library(jsonlite)
library(tibble)
library(dplyr)
library(ggplot2)
```


```{r}
# function to query the API
get_football_data <- function(endpoint, params = list()) {
  url <- paste0("https://v3.football.api-sports.io/", endpoint)
  api_key <- '7bb4734f269c8a2fce113f507c69ed8e'
  response <- GET(url, add_headers(`x-apisports-key` = api_key), query = params)
  
  if (http_status(response)$category != "Success") {
    stop(paste("Error:", http_status(response)$message, content(response, "text")))
  }
  
  data <- content(response, "parsed", simplifyVector = TRUE)
  
  return(data)
}
```

By querying API, I will get the top scorers data in English Premier League in 2022-2023 season:

```{r}
endpoint <- "players/topscorers"
params <- list(league = 39, season = 2022)

#get data list and convert to tibble
top_scorers_data <- get_football_data(endpoint, params)
top_scorers_list <- as_tibble(top_scorers_data$response$player)
name_age <- top_scorers_list |>
  select(id, name, age)

top_scorers_stats <- bind_rows(lapply(top_scorers_data$response$statistics, as_tibble, .name_repair="unique"))

stats <- top_scorers_stats |>
  select(team, games)

games <- as_tibble(top_scorers_stats$games)
goals <- as_tibble(top_scorers_stats$goals)
shots <- as_tibble(top_scorers_stats$)

top_scorers_df <- bind_cols(top_scorers_list, top_scorers_stats)
```

Next, I will get the team data of Mancherster United in 2022-2023 season:
```{r}
endpoint <- "teams/statistics"
params <- list(league = 39, season = 2022, team = 33)

team_data <- get_football_data(endpoint, api_key, params)
team_list <- team_data$response$fixtures

# Convert the list to a tibble
team_df <- as_tibble(team_list)
```


## Summarize the Data

# Contingency tables

First contingency table will show the nationality of top scorers:
```{r}
national <- top_scorers_df |>
  group_by(nationality) |>
  summarize(count = n())
```

Second contingency table will be two-way table to show the club and position of the top scorers:
```{r}
club_position <- top_scorers_df |>
  group_by(team$name, games$position) |>
  summarize(count = n())
```


```{r}
df <- top_scorers_list_1 |>
  bind_rows() |>
  flatten()
```

```{r}
```

```{r}
```
